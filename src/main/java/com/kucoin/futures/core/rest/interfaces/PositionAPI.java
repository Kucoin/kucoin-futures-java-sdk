/*
 * Copyright 2019 Mek Global Limited
 */
package com.kucoin.futures.core.rest.interfaces;

import com.kucoin.futures.core.rest.request.HistoryPositionsRequest;
import com.kucoin.futures.core.rest.request.WithdrawMarginRequest;
import com.kucoin.futures.core.rest.response.HistoryPositionResponse;
import com.kucoin.futures.core.rest.response.Pagination;
import com.kucoin.futures.core.rest.response.PositionResponse;

import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;

/**
 * Position API
 * @author chenshiwei
 * @since 2019/10/14
 */
public interface PositionAPI {

    /**
     * Get the position details of a specified position.
     *
     * @param symbol Symbol of the contract
     * @return
     * @throws IOException
     */
    PositionResponse getPosition(String symbol) throws IOException;

    /**
     * Get the position details of a specified position.
     *
     * @return
     * @throws IOException
     */
    List<PositionResponse> getPositions() throws IOException;

    /**
     * This interface can query position history information records
     *
     * @param request
     * @return
     * @throws IOException
     */
    Pagination<HistoryPositionResponse> getHistoryPositions(HistoryPositionsRequest request) throws IOException;

    /**
     * Enable/Disable of Auto-Deposit Margin
     *
     * @param symbol Symbol of the contract
     * @param status Status
     * @throws IOException
     */
    void setAutoDepositMargin(String symbol, boolean status) throws IOException;

    /**
     * This interface can query the maximum amount of margin that the current position supports withdrawal.
     *
     * @param symbol Symbol of the contract
     * @return The size of the position that can be deposited. If it is USDT-margin, it represents the amount of USDT. If it is coin-margin, this value represents the number of coins
     * @throws IOException
     */
    BigDecimal getMaxWithdrawMargin(String symbol) throws IOException;

    /**
     * Remove Margin Manually
     *
     * @param request
     * @return The size of the position deposited. If it is USDT-margin, it represents the amount of USDT. If it is coin-margin, this value represents the number of coins
     * @throws IOException
     */
    BigDecimal withdrawMargin(WithdrawMarginRequest request) throws IOException;

    /**
     * Add Margin Manually
     *
     * @param symbol Ticker symbol of the contract
     * @param margin Margin amount (min. margin amount≥0.00001667XBT）
     * @param bizNo  A unique ID generated by the user, to ensure the operation is processed by the system only once
     * @throws IOException
     */
    void addMarginManually(String symbol, BigDecimal margin, String bizNo) throws IOException;

}
